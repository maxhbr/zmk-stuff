/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3
#define HYPER   4

#define HYPR(KC) LC(LS(LA(LG(KC))))

/ {

        conditional_layers {
                compatible = "zmk,conditional-layers";

                tri_layer {
                        if-layers  = <1 2>;
                        then-layer = <3>;
                };
        };
    behaviors {
        // This is mod-tap with the "balanced" flavor.
        // Improves the '&mt RCTRL SPACE' behavior when typing quickly.
        bmt: balanced_mod_tap {
                compatible = "zmk,behavior-hold-tap";
                label = "MOD_TAP";
                #binding-cells = <2>;
                flavor = "balanced";
                tapping-term-ms = <200>;
                bindings = <&kp>, <&kp>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
// +-----------+----------+-----------+-----------+----------+--------+                                                             +--------+----------+-----------+----------+-------------+----------------+
// |           |          |           |           |          |        |                                                             |        |          |           |          |             |                |
   &kp  ESC    &kp  N1    &kp  N2     &kp  N3     &kp  N4    &kp  N5                                                                &kp  N6  &kp  N7    &kp  N8     &kp  N9    &kp  N0       &kp  MINUS
   &kp  TAB    &kp  Q     &kp  W      &kp  E      &kp  R     &kp  T                                                                 &kp  Y   &kp  U     &kp  I      &kp  O     &kp  P        &kp  LEFT_BRACKET
   &kp  CAPS   &kp  A     &kp  S      &kp  D      &kp  F     &kp  G    /*-------------+-------------+  +-------------+-----------*/ &kp  H   &kp  J     &kp  K      &kp  L     &kp  SEMI     &kp  SQT
   &kp  LSHFT  &kp  Z     &kp  X      &kp  C      &kp  V     &kp  B    &kp  LCTRL     &mt LSHFT SPC    &mt RSHFT RET &kp  HOME      &kp  N   &kp  M     &kp  COMMA  &kp  DOT   &kp  SLASH    &mt  RSHFT ENTER
   &kp  LALT   &kp PG_DN  &kp  PG_UP  &kp  LMETA             &kp RET   &bmt LMETA RET &mo  LOWER       &mo  RAISE    &bmt LMETA SPC &kp SPC             &kp  LEFT   &kp  DOWN  &kp  UP       &kp  RIGHT
// |           |          |           |                      |         |              |             |  |             |              |                   |           |          |             |                 |
// +-----------+----------+-----------+----------------------+---------+--------------+-------------+  +-------------+--------------+-------------------+-----------+----------+-------------+-----------------+
                        >;
                };

                lower_layer {
                        bindings = <
&none          &kp  F1      &kp  F2      &kp  F3     &kp  F4     &kp  F5                                                                        &kp  F6    &kp  F7    &kp  F8     &kp  F9    &kp  F10      &kp  F11
&kp  GRAVE     &kp  N1      &kp  N2      &kp  N3     &kp  N4     &kp  N5                                                                        &kp  N6    &kp  N7    &kp  N8     &kp  N9    &kp  N0       &kp  F12
&kp  LS(GRAVE) &kp LS(N1)   &kp  LS(N2)  &kp  LS(N3) &kp  LS(N4) &kp  LS(N5)                                                                    &kp LS(N6) &kp LS(N7) &kp LS(N8)  &kp LS(N9) &kp  LS(N0)   &none
&none          &kp EQUAL    &kp MINUS    &kp  LPAR   &kp  LBKT   &kp  LBRC          &none       &none         &none       &none                 &kp RBRC   &kp RBKT   &kp RPAR    &kp PLUS   &kp  UNDER    &none
&trans         &trans       &trans       &trans                           &trans    &trans      &trans        &trans      &trans    &trans                            &trans      &trans     &trans        &trans
                        >;
                };

                raise_layer {
                        bindings = <
&none          &kp  F1      &kp  F2      &kp  F3     &kp  F4     &kp  F5                                                                        &kp  F6    &kp  F7    &kp  F8     &kp  F9    &kp  F10      &kp  F11
&kp  GRAVE     &kp  N1      &kp  N2      &kp  N3     &kp  N4     &kp  N5                                                                        &kp  N6    &kp  N7    &kp  N8     &kp  N9    &kp  N0       &kp  F12
&kp  LS(GRAVE) &kp LS(N1)   &kp  LS(N2)  &kp  LS(N3) &kp  LS(N4) &kp  LS(N5)                                                                    &kp LS(N6) &kp LS(N7) &kp LS(N8)  &kp LS(N9) &kp  LS(N0)   &none
&none          &kp EQUAL    &kp MINUS    &kp  LPAR   &kp  LBKT   &kp  LBRC          &none       &none         &none       &none                 &kp RBRC   &kp RBKT   &kp RPAR    &kp PLUS   &kp  UNDER    &none
&trans         &trans       &trans       &trans                           &trans    &trans      &trans        &trans      &trans    &trans                            &trans      &trans     &trans        &trans
                        >;
                };

                adjust_layer {
                        bindings = <
&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_SEL 5                                                                          &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_SEL 5
&none        &none        &none        &none        &none        &none                                                                                 &none        &none        &none        &none        &none        &none
&none        &none        &none        &none        &none        &none                                                                                 &none        &none        &none        &none        &none        &none
&none        &none        &none        &none        &none        &none                     &none       &none         &none       &none                 &none        &none        &none        &none        &none        &none
&bt BT_CLR   &none        &none        &none                                     &none     &none       &trans        &trans      &none     &none                                 &none        &none        &none        &bt BT_CLR
                        >;
                };

                hyper_layer {
                        bindings = <
&trans        &trans     &trans      &trans      &trans      &trans                                                                         &trans   &trans     &trans      &trans     &trans        &none
&trans        &trans     &kp HYPR(W) &trans      &trans      &trans                                                                         &trans   &trans     &trans      &trans     &trans        &none
&trans        &trans     &trans      &trans      &kp HYPR(F) &trans                                                                         &kp LEFT &kp DOWN   &kp UP      &kp RIGHT  &trans        &none
&trans        &trans     &trans      &trans      &trans      &trans             &trans      &trans        &trans      &trans                &trans   &trans     &trans      &trans     &trans        &none
&trans        &trans     &trans      &trans                           &trans    &kp HYPR(SPACE)       &trans        &trans      &trans    &trans                          &trans      &trans     &trans        &none
                        >;
                };
        };
};
